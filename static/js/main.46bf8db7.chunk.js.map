{"version":3,"sources":["components/ContactForm/ContactForm.module.css","redux/contacts/contactAction.js","services/fetchContacts.js","redux/contacts/contactSelectors.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","a","contactAction","get","then","data","catch","error","addContact","name","number","post","removeContacts","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","contact","toLowerCase","includes","getContactByID","_","contactId","find","connect","prop","length","isContact","nameContact","text","CSSTransition","in","appear","timeout","classNames","unmountOnExit","className","INITIAL_CONTACT_STATE","numberContact","ContactForm","inputName","target","setState","value","inputNumber","handleSubmit","e","preventDefault","onAddContact","props","this","filtered","itemsArray","map","onSubmit","style","Contact_form","type","onChange","placeholder","pattern","Component","contactSelectors","onDeleteContact","onClick","listNull","TransitionGroup","component","key","mapDispatchToProps","inputFilter","contactActions","App","onFetchContacts","isLoadingContacts","contactsOperation","createReducer","payload","action","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactReducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46bf8db7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact_form\":\"ContactForm_Contact_form__FZpGl\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst addContactsRequest = createAction(\"contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactsError = createAction(\"contacts/addError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contact/changeFilter\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n\r\n  changeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport contactAction from \"../redux/contacts/contactAction\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(contactAction.fetchContactsRequest());\r\n  await axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactAction.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(contactAction.fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => async (dispatch) => {\r\n  dispatch(contactAction.addContactsRequest());\r\n  await axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactAction.addContactsSuccess(data)))\r\n    .catch((error) => dispatch(contactAction.addContactsError(error)));\r\n};\r\n\r\nconst removeContacts = (id) => async (dispatch) => {\r\n  dispatch(contactAction.removeContactsRequest());\r\n  await axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactAction.removeContactsSuccess(id)))\r\n    .catch((error) => dispatch(contactAction.removeContactsError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  removeContacts,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nconst getContactByID = createSelector(\r\n  [(_, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => contacts.find((contact) => contact.id === contactId)\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getContacts,\r\n  getContactByID,\r\n};\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./alert.css\";\r\n\r\nconst Alert = ({ text }) => (\r\n  <CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    timeout={500}\r\n    classNames=\"anim\"\r\n    unmountOnExit\r\n  >\r\n    <div className=\"alert\">{text}</div>\r\n  </CSSTransition>\r\n);\r\n\r\nconst mapStateToProps = (state, prop) => {\r\n  const { items } = state.contacts;\r\n\r\n  if (items.length > 4) {\r\n    return { isContact: true, nameContact: 10 };\r\n  }\r\n  return { isContact: false };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Alert);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport fetchContacts from \"../../services/fetchContacts\";\r\nimport contactSelectors from \"../../redux/contacts/contactSelectors\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nconst INITIAL_CONTACT_STATE = {\r\n  nameContact: \"\",\r\n  numberContact: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INITIAL_CONTACT_STATE;\r\n\r\n  inputName = ({ target }) => {\r\n    this.setState({\r\n      nameContact: target.value,\r\n    });\r\n  };\r\n\r\n  inputNumber = ({ target }) => {\r\n    this.setState({\r\n      numberContact: target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { nameContact, numberContact } = this.state;\r\n    const { onAddContact } = this.props;\r\n    onAddContact(nameContact, numberContact);\r\n    this.setState({ ...INITIAL_CONTACT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { nameContact, numberContact } = this.state;\r\n    const { itemsArray } = this.props;\r\n\r\n    const filtered = itemsArray\r\n      .map(({ name }) => name.toLowerCase())\r\n      .includes(nameContact.toLowerCase());\r\n\r\n    return (\r\n      <>\r\n        {filtered && <Alert text=\"Contact already exist\" />}\r\n        <form onSubmit={this.handleSubmit} className={style.Contact_form}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={style.inputName}\r\n              type=\"text\"\r\n              value={nameContact}\r\n              onChange={this.inputName}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              placeholder=\"XXX-XX-XX\"\r\n              type=\"tel\"\r\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              value={numberContact}\r\n              onChange={this.inputNumber}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">ADD CONTACT</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProprs = (state) => ({\r\n  itemsArray: contactSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: (name, number) =>\r\n      dispatch(fetchContacts.addContact({ name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProprs, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport fetchContacts from \"../../services/fetchContacts\";\r\nimport contactSelectors from \"../../redux/contacts/contactSelectors\";\r\nimport \"./ContacList.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDeleteContact }) => (\r\n  <li className=\"phone_Item\">\r\n    <span className=\"phone_name\">{name}</span>\r\n    <span className=\"phone_number\">{number}</span>\r\n    <button type=\"button\" onClick={onDeleteContact}></button>\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, { id }) => ({\r\n  ...contactSelectors.getContactByID(state, id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => ({\r\n  onDeleteContact: () => dispatch(fetchContacts.removeContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nimport contactSelectors from \"../../redux/contacts/contactSelectors\";\r\n\r\nimport \"./ContacList.css\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const listNull = contacts.length === 0 ? true : false;\r\n  return (\r\n    <>\r\n      {listNull && <Alert text=\"No have contact\" />}\r\n      <TransitionGroup component=\"ul\" className=\"contact_list\">\r\n        {contacts.map(({ id }) => (\r\n          <CSSTransition key={id} timeout={250} classNames=\"list\">\r\n            <ContactListItem id={id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactActions from \"../../redux/contacts/contactAction\";\r\nimport contactSelectors from \"../../redux/contacts/contactSelectors\";\r\n\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ value, inputFilter, isContact }) => (\r\n  <>\r\n    {isContact && (\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        classNames=\"find\"\r\n        timeout={500}\r\n        unmountOnExit\r\n      >\r\n        <div className=\"findContact\">\r\n          <p>Find contacts by name or number</p>\r\n          <input\r\n            className=\"inputName\"\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={({ target }) => inputFilter(target.value)}\r\n          />\r\n        </div>\r\n      </CSSTransition>\r\n    )}\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (contactSelectors.getContacts(state).length > 1) {\r\n    return { value: contactSelectors.getFilter(state), isContact: true };\r\n  }\r\n  return { value: contactSelectors.getFilter(state) };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  inputFilter: contactActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nimport contactsOperation from \"../services/fetchContacts\";\r\nimport contactSelectors from \"../redux/contacts/contactSelectors\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phoneBook_container\">\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames=\"title_anim\"\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <h1 className=\"title\">Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames=\"form_fade\"\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <ContactForm />\r\n        </CSSTransition>\r\n        <Filter />\r\n        {this.props.isLoadingContacts && <h1>грузим</h1>}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: contactSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperation.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport contactAction from \"./contactAction\";\r\n\r\nconst onAddContact = (state, { payload }) => {\r\n  return [payload, ...state];\r\n};\r\nconst onRemoveContact = (state, action) => {\r\n  return state.filter(({ id }) => id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactAction.fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [contactAction.addContactsSuccess]: onAddContact,\r\n  [contactAction.removeContactsSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactAction.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactAction.fetchContactsRequest]: () => true,\r\n  [contactAction.fetchContactsSuccess]: () => false,\r\n  [contactAction.fetchContactsError]: () => false,\r\n  [contactAction.addContactsRequest]: () => true,\r\n  [contactAction.addContactsSuccess]: () => false,\r\n  [contactAction.addContactsError]: () => false,\r\n  [contactAction.removeContactsRequest]: () => true,\r\n  [contactAction.removeContactsSuccess]: () => false,\r\n  [contactAction.removeContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"../redux/contacts/contactReducer\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\n// const md1 = (store) => (next) => (action) => {\r\n//   console.log(\"Hello\");\r\n//   return next(action);\r\n// };\r\n\r\n// const md2 = (store) => (next) => (action) => {\r\n//   console.log(\"Hello bfbf\");\r\n//   return next(action);\r\n// };\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/App.js\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}